##! This script detects large number of ICMP Time Exceeded messages.
##! It generates notices when (i) The number of ICMP Time Exceeded 
##! messages for a target exceeds threshold; and (ii) When the
##! number of ICMP Time Exceeded messages generated by a host, exceeds 
##! a threshold 
@load base/frameworks/metrics

module ICMPTimeExceeded;

export {
	redef enum Notice::Type += {
		## Indicates that the number of ICMP Time Exceeded messages 
		## generated by a source exceeded threshold
		ICMP_Time_Exceeded_Source,
		## Indicates that the number of ICMP Time Exceeded messages 
		## for a target exceeded threshold
		ICMP_Time_Exceeded_Target,
	};
	
	redef enum Metrics::ID += {
		## Metric to track ICMP Time Exceeded messages generated by a source
		ICMP_TIME_EXCEEDED_SOURCE,
		## Metric to track ICMP Time Exceeded messages generated for a target
		ICMP_TIME_EXCEEDED_TARGET,
	};
	
	## Defines the threshold for ICMP Time Exceeded messages generated by a source
	const icmp_time_exceeded_source_threshold = 1 &redef;

	## Defines the threshold for ICMP Time Exceeded messages generated for a target
	const icmp_time_exceeded_target_threshold = 1 &redef;

	## Interval at which to watch for the
	## :bro:id:`ICMPTimeExceeded::icmp_time_exceeded_source_threshold` variable to be crossed.
	## At the end of each interval the counter is reset.
	const icmp_time_exceeded_source_interval = 5min &redef;

	## Interval at which to watch for the
	## :bro:id:`ICMPTimeExceeded::icmp_time_exceeded_target_threshold` variable to be crossed.
	## At the end of each interval the counter is reset.
	const icmp_time_exceeded_target_interval = 5min &redef;
}

event bro_init() &priority=3
	{

	# Add filters to the metrics so that the metrics framework knows how to 
	# determine when it looks like an actual attack and how to respond when
	# thresholds are crossed.
	
	Metrics::add_filter(ICMP_TIME_EXCEEDED_SOURCE, [$log=F,
	                                   $notice_threshold=icmp_time_exceeded_source_threshold,
	                                   $break_interval=icmp_time_exceeded_source_interval,
	                                   $note=ICMP_Time_Exceeded_Source]);
	Metrics::add_filter(ICMP_TIME_EXCEEDED_TARGET, [$log=F,
	                                 $notice_threshold=icmp_time_exceeded_target_threshold,
	                                 $break_interval=icmp_time_exceeded_target_interval,
	                                 $note=ICMP_Time_Exceeded_Target]);
	}



event icmp_time_exceeded(c: connection, icmp: icmp_conn, code: count, context: icmp_context)
	{
	Metrics::add_data(ICMP_TIME_EXCEEDED_SOURCE, [ $host = context$id$orig_h ], 1);
	Metrics::add_data(ICMP_TIME_EXCEEDED_TARGET, [ $host = context$id$resp_h ], 1);
	}







